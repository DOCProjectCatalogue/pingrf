                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.0 #8981 (May  7 2015) (Mac OS X x86_64)
                                      4 ; This file was generated Fri Mar 18 14:33:05 2016
                                      5 ;--------------------------------------------------------
                                      6 	.module cobs
                                      7 	.optsdcc -mmcs51 --model-large
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _unstuff
                                     13 	.globl _stuff
                                     14 	.globl _unstuff_PARM_3
                                     15 	.globl _unstuff_PARM_2
                                     16 	.globl _stuff_PARM_2
                                     17 ;--------------------------------------------------------
                                     18 ; special function registers
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; special function bits
                                     24 ;--------------------------------------------------------
                                     25 	.area RSEG    (ABS,DATA)
      000000                         26 	.org 0x0000
                                     27 ;--------------------------------------------------------
                                     28 ; overlayable register banks
                                     29 ;--------------------------------------------------------
                                     30 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         31 	.ds 8
                                     32 ;--------------------------------------------------------
                                     33 ; internal ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area DSEG    (DATA)
                                     36 ;--------------------------------------------------------
                                     37 ; overlayable items in internal ram 
                                     38 ;--------------------------------------------------------
                                     39 	.area	OSEG    (OVR,DATA)
      000000                         40 _stuff_sloc0_1_0:
      000000                         41 	.ds 3
      000003                         42 _stuff_sloc1_1_0:
      000003                         43 	.ds 3
      000006                         44 _stuff_sloc2_1_0:
      000006                         45 	.ds 3
                                     46 ;--------------------------------------------------------
                                     47 ; indirectly addressable internal ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area ISEG    (DATA)
                                     50 ;--------------------------------------------------------
                                     51 ; absolute internal ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area IABS    (ABS,DATA)
                                     54 	.area IABS    (ABS,DATA)
                                     55 ;--------------------------------------------------------
                                     56 ; bit data
                                     57 ;--------------------------------------------------------
                                     58 	.area BSEG    (BIT)
                                     59 ;--------------------------------------------------------
                                     60 ; paged external ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area PSEG    (PAG,XDATA)
                                     63 ;--------------------------------------------------------
                                     64 ; external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area XSEG    (XDATA)
      000000                         67 _stuff_PARM_2:
      000000                         68 	.ds 1
      000001                         69 _stuff_p_1_21:
      000001                         70 	.ds 3
      000004                         71 _stuff_header_1_22:
      000004                         72 	.ds 1
      000005                         73 _stuff_cp_1_22:
      000005                         74 	.ds 3
      000008                         75 _unstuff_PARM_2:
      000008                         76 	.ds 3
      00000B                         77 _unstuff_PARM_3:
      00000B                         78 	.ds 1
      00000C                         79 _unstuff_h_1_25:
      00000C                         80 	.ds 1
      00000D                         81 _unstuff_ep_1_26:
      00000D                         82 	.ds 3
                                     83 ;--------------------------------------------------------
                                     84 ; absolute external ram data
                                     85 ;--------------------------------------------------------
                                     86 	.area XABS    (ABS,XDATA)
                                     87 ;--------------------------------------------------------
                                     88 ; external initialized ram data
                                     89 ;--------------------------------------------------------
                                     90 	.area XISEG   (XDATA)
                                     91 	.area HOME    (CODE)
                                     92 	.area GSINIT0 (CODE)
                                     93 	.area GSINIT1 (CODE)
                                     94 	.area GSINIT2 (CODE)
                                     95 	.area GSINIT3 (CODE)
                                     96 	.area GSINIT4 (CODE)
                                     97 	.area GSINIT5 (CODE)
                                     98 	.area GSINIT  (CODE)
                                     99 	.area GSFINAL (CODE)
                                    100 	.area CSEG    (CODE)
                                    101 ;--------------------------------------------------------
                                    102 ; global & static initialisations
                                    103 ;--------------------------------------------------------
                                    104 	.area HOME    (CODE)
                                    105 	.area GSINIT  (CODE)
                                    106 	.area GSFINAL (CODE)
                                    107 	.area GSINIT  (CODE)
                                    108 ;--------------------------------------------------------
                                    109 ; Home
                                    110 ;--------------------------------------------------------
                                    111 	.area HOME    (CODE)
                                    112 	.area HOME    (CODE)
                                    113 ;--------------------------------------------------------
                                    114 ; code
                                    115 ;--------------------------------------------------------
                                    116 	.area CSEG    (CODE)
                                    117 ;------------------------------------------------------------
                                    118 ;Allocation info for local variables in function 'stuff'
                                    119 ;------------------------------------------------------------
                                    120 ;n                         Allocated with name '_stuff_PARM_2'
                                    121 ;p                         Allocated with name '_stuff_p_1_21'
                                    122 ;header                    Allocated with name '_stuff_header_1_22'
                                    123 ;cp                        Allocated with name '_stuff_cp_1_22'
                                    124 ;bp                        Allocated with name '_stuff_bp_1_22'
                                    125 ;ep                        Allocated with name '_stuff_ep_1_22'
                                    126 ;sloc0                     Allocated with name '_stuff_sloc0_1_0'
                                    127 ;sloc1                     Allocated with name '_stuff_sloc1_1_0'
                                    128 ;sloc2                     Allocated with name '_stuff_sloc2_1_0'
                                    129 ;------------------------------------------------------------
                                    130 ;	cobs.c:6: stuff(uint8 *p, uint8 n)
                                    131 ;	-----------------------------------------
                                    132 ;	 function stuff
                                    133 ;	-----------------------------------------
      000000                        134 _stuff:
                           000007   135 	ar7 = 0x07
                           000006   136 	ar6 = 0x06
                           000005   137 	ar5 = 0x05
                           000004   138 	ar4 = 0x04
                           000003   139 	ar3 = 0x03
                           000002   140 	ar2 = 0x02
                           000001   141 	ar1 = 0x01
                           000000   142 	ar0 = 0x00
      000000 AF F0            [24]  143 	mov	r7,b
      000002 AE 83            [24]  144 	mov	r6,dph
      000004 E5 82            [12]  145 	mov	a,dpl
      000006 90r00r01         [24]  146 	mov	dptr,#_stuff_p_1_21
      000009 F0               [24]  147 	movx	@dptr,a
      00000A EE               [12]  148 	mov	a,r6
      00000B A3               [24]  149 	inc	dptr
      00000C F0               [24]  150 	movx	@dptr,a
      00000D EF               [12]  151 	mov	a,r7
      00000E A3               [24]  152 	inc	dptr
      00000F F0               [24]  153 	movx	@dptr,a
                                    154 ;	cobs.c:8: uint8 header = n+1, *cp = nil;
      000010 90r00r00         [24]  155 	mov	dptr,#_stuff_PARM_2
      000013 E0               [24]  156 	movx	a,@dptr
      000014 FF               [12]  157 	mov	r7,a
      000015 90r00r04         [24]  158 	mov	dptr,#_stuff_header_1_22
      000018 04               [12]  159 	inc	a
      000019 F0               [24]  160 	movx	@dptr,a
      00001A 90r00r05         [24]  161 	mov	dptr,#_stuff_cp_1_22
      00001D E4               [12]  162 	clr	a
      00001E F0               [24]  163 	movx	@dptr,a
      00001F A3               [24]  164 	inc	dptr
      000020 F0               [24]  165 	movx	@dptr,a
      000021 A3               [24]  166 	inc	dptr
      000022 F0               [24]  167 	movx	@dptr,a
                                    168 ;	cobs.c:9: uint8 *bp = p, *ep = bp + n;
      000023 90r00r01         [24]  169 	mov	dptr,#_stuff_p_1_21
      000026 E0               [24]  170 	movx	a,@dptr
      000027 FC               [12]  171 	mov	r4,a
      000028 A3               [24]  172 	inc	dptr
      000029 E0               [24]  173 	movx	a,@dptr
      00002A FD               [12]  174 	mov	r5,a
      00002B A3               [24]  175 	inc	dptr
      00002C E0               [24]  176 	movx	a,@dptr
      00002D FE               [12]  177 	mov	r6,a
      00002E EF               [12]  178 	mov	a,r7
      00002F 2C               [12]  179 	add	a,r4
      000030 F5*03            [12]  180 	mov	_stuff_sloc1_1_0,a
      000032 E4               [12]  181 	clr	a
      000033 3D               [12]  182 	addc	a,r5
      000034 F5*04            [12]  183 	mov	(_stuff_sloc1_1_0 + 1),a
      000036 8E*05            [24]  184 	mov	(_stuff_sloc1_1_0 + 2),r6
                                    185 ;	cobs.c:25: return header;
      000038 8C*00            [24]  186 	mov	_stuff_sloc0_1_0,r4
      00003A 8D*01            [24]  187 	mov	(_stuff_sloc0_1_0 + 1),r5
      00003C 8E*02            [24]  188 	mov	(_stuff_sloc0_1_0 + 2),r6
      00003E 8C*06            [24]  189 	mov	_stuff_sloc2_1_0,r4
      000040 8D*07            [24]  190 	mov	(_stuff_sloc2_1_0 + 1),r5
      000042 8E*08            [24]  191 	mov	(_stuff_sloc2_1_0 + 2),r6
      000044                        192 00110$:
                                    193 ;	cobs.c:11: for(; p<ep; p++){
      000044 A8*06            [24]  194 	mov	r0,_stuff_sloc2_1_0
      000046 A9*07            [24]  195 	mov	r1,(_stuff_sloc2_1_0 + 1)
      000048 AF*08            [24]  196 	mov	r7,(_stuff_sloc2_1_0 + 2)
      00004A C0*03            [24]  197 	push	_stuff_sloc1_1_0
      00004C C0*04            [24]  198 	push	(_stuff_sloc1_1_0 + 1)
      00004E C0*05            [24]  199 	push	(_stuff_sloc1_1_0 + 2)
      000050 88 82            [24]  200 	mov	dpl,r0
      000052 89 83            [24]  201 	mov	dph,r1
      000054 8F F0            [24]  202 	mov	b,r7
      000056 12r00r00         [24]  203 	lcall	___gptr_cmp
      000059 15 81            [12]  204 	dec	sp
      00005B 15 81            [12]  205 	dec	sp
      00005D 15 81            [12]  206 	dec	sp
      00005F 50 72            [24]  207 	jnc	00119$
                                    208 ;	cobs.c:12: if(*p == 0){
      000061 85*06 82         [24]  209 	mov	dpl,_stuff_sloc2_1_0
      000064 85*07 83         [24]  210 	mov	dph,(_stuff_sloc2_1_0 + 1)
      000067 85*08 F0         [24]  211 	mov	b,(_stuff_sloc2_1_0 + 2)
      00006A 12r00r00         [24]  212 	lcall	__gptrget
      00006D 70 4B            [24]  213 	jnz	00111$
                                    214 ;	cobs.c:13: if(cp == nil)
      00006F 90r00r05         [24]  215 	mov	dptr,#_stuff_cp_1_22
      000072 E0               [24]  216 	movx	a,@dptr
      000073 FA               [12]  217 	mov	r2,a
      000074 A3               [24]  218 	inc	dptr
      000075 E0               [24]  219 	movx	a,@dptr
      000076 FB               [12]  220 	mov	r3,a
      000077 A3               [24]  221 	inc	dptr
      000078 E0               [24]  222 	movx	a,@dptr
      000079 FF               [12]  223 	mov	r7,a
      00007A EA               [12]  224 	mov	a,r2
      00007B 4B               [12]  225 	orl	a,r3
      00007C 70 1B            [24]  226 	jnz	00102$
                                    227 ;	cobs.c:14: header = 1+p-bp;
      00007E 74 01            [12]  228 	mov	a,#0x01
      000080 25*06            [12]  229 	add	a,_stuff_sloc2_1_0
      000082 F8               [12]  230 	mov	r0,a
      000083 E4               [12]  231 	clr	a
      000084 35*07            [12]  232 	addc	a,(_stuff_sloc2_1_0 + 1)
      000086 F9               [12]  233 	mov	r1,a
      000087 AE*08            [24]  234 	mov	r6,(_stuff_sloc2_1_0 + 2)
      000089 E8               [12]  235 	mov	a,r0
      00008A C3               [12]  236 	clr	c
      00008B 95*00            [12]  237 	subb	a,_stuff_sloc0_1_0
      00008D F8               [12]  238 	mov	r0,a
      00008E E9               [12]  239 	mov	a,r1
      00008F 95*01            [12]  240 	subb	a,(_stuff_sloc0_1_0 + 1)
      000091 F9               [12]  241 	mov	r1,a
      000092 90r00r04         [24]  242 	mov	dptr,#_stuff_header_1_22
      000095 E8               [12]  243 	mov	a,r0
      000096 F0               [24]  244 	movx	@dptr,a
      000097 80 13            [24]  245 	sjmp	00103$
      000099                        246 00102$:
                                    247 ;	cobs.c:16: *cp = p-cp;
      000099 E5*06            [12]  248 	mov	a,_stuff_sloc2_1_0
      00009B C3               [12]  249 	clr	c
      00009C 9A               [12]  250 	subb	a,r2
      00009D FD               [12]  251 	mov	r5,a
      00009E E5*07            [12]  252 	mov	a,(_stuff_sloc2_1_0 + 1)
      0000A0 9B               [12]  253 	subb	a,r3
      0000A1 FE               [12]  254 	mov	r6,a
      0000A2 8A 82            [24]  255 	mov	dpl,r2
      0000A4 8B 83            [24]  256 	mov	dph,r3
      0000A6 8F F0            [24]  257 	mov	b,r7
      0000A8 ED               [12]  258 	mov	a,r5
      0000A9 12r00r00         [24]  259 	lcall	__gptrput
      0000AC                        260 00103$:
                                    261 ;	cobs.c:18: cp = p;
      0000AC 90r00r05         [24]  262 	mov	dptr,#_stuff_cp_1_22
      0000AF E5*06            [12]  263 	mov	a,_stuff_sloc2_1_0
      0000B1 F0               [24]  264 	movx	@dptr,a
      0000B2 E5*07            [12]  265 	mov	a,(_stuff_sloc2_1_0 + 1)
      0000B4 A3               [24]  266 	inc	dptr
      0000B5 F0               [24]  267 	movx	@dptr,a
      0000B6 E5*08            [12]  268 	mov	a,(_stuff_sloc2_1_0 + 2)
      0000B8 A3               [24]  269 	inc	dptr
      0000B9 F0               [24]  270 	movx	@dptr,a
      0000BA                        271 00111$:
                                    272 ;	cobs.c:11: for(; p<ep; p++){
      0000BA 05*06            [12]  273 	inc	_stuff_sloc2_1_0
      0000BC E4               [12]  274 	clr	a
      0000BD B5*06 02         [24]  275 	cjne	a,_stuff_sloc2_1_0,00133$
      0000C0 05*07            [12]  276 	inc	(_stuff_sloc2_1_0 + 1)
      0000C2                        277 00133$:
      0000C2 90r00r01         [24]  278 	mov	dptr,#_stuff_p_1_21
      0000C5 E5*06            [12]  279 	mov	a,_stuff_sloc2_1_0
      0000C7 F0               [24]  280 	movx	@dptr,a
      0000C8 E5*07            [12]  281 	mov	a,(_stuff_sloc2_1_0 + 1)
      0000CA A3               [24]  282 	inc	dptr
      0000CB F0               [24]  283 	movx	@dptr,a
      0000CC E5*08            [12]  284 	mov	a,(_stuff_sloc2_1_0 + 2)
      0000CE A3               [24]  285 	inc	dptr
      0000CF F0               [24]  286 	movx	@dptr,a
      0000D0 02r00r44         [24]  287 	ljmp	00110$
      0000D3                        288 00119$:
      0000D3 90r00r01         [24]  289 	mov	dptr,#_stuff_p_1_21
      0000D6 E5*06            [12]  290 	mov	a,_stuff_sloc2_1_0
      0000D8 F0               [24]  291 	movx	@dptr,a
      0000D9 E5*07            [12]  292 	mov	a,(_stuff_sloc2_1_0 + 1)
      0000DB A3               [24]  293 	inc	dptr
      0000DC F0               [24]  294 	movx	@dptr,a
      0000DD E5*08            [12]  295 	mov	a,(_stuff_sloc2_1_0 + 2)
      0000DF A3               [24]  296 	inc	dptr
      0000E0 F0               [24]  297 	movx	@dptr,a
                                    298 ;	cobs.c:22: if(cp != nil)
      0000E1 90r00r05         [24]  299 	mov	dptr,#_stuff_cp_1_22
      0000E4 E0               [24]  300 	movx	a,@dptr
      0000E5 FD               [12]  301 	mov	r5,a
      0000E6 A3               [24]  302 	inc	dptr
      0000E7 E0               [24]  303 	movx	a,@dptr
      0000E8 FE               [12]  304 	mov	r6,a
      0000E9 A3               [24]  305 	inc	dptr
      0000EA E0               [24]  306 	movx	a,@dptr
      0000EB FF               [12]  307 	mov	r7,a
      0000EC ED               [12]  308 	mov	a,r5
      0000ED 4E               [12]  309 	orl	a,r6
      0000EE 60 13            [24]  310 	jz	00108$
                                    311 ;	cobs.c:23: *cp = p-cp;
      0000F0 E5*06            [12]  312 	mov	a,_stuff_sloc2_1_0
      0000F2 C3               [12]  313 	clr	c
      0000F3 9D               [12]  314 	subb	a,r5
      0000F4 FB               [12]  315 	mov	r3,a
      0000F5 E5*07            [12]  316 	mov	a,(_stuff_sloc2_1_0 + 1)
      0000F7 9E               [12]  317 	subb	a,r6
      0000F8 FC               [12]  318 	mov	r4,a
      0000F9 8D 82            [24]  319 	mov	dpl,r5
      0000FB 8E 83            [24]  320 	mov	dph,r6
      0000FD 8F F0            [24]  321 	mov	b,r7
      0000FF EB               [12]  322 	mov	a,r3
      000100 12r00r00         [24]  323 	lcall	__gptrput
      000103                        324 00108$:
                                    325 ;	cobs.c:25: return header;
      000103 90r00r04         [24]  326 	mov	dptr,#_stuff_header_1_22
      000106 E0               [24]  327 	movx	a,@dptr
      000107 F5 82            [12]  328 	mov	dpl,a
      000109 22               [24]  329 	ret
                                    330 ;------------------------------------------------------------
                                    331 ;Allocation info for local variables in function 'unstuff'
                                    332 ;------------------------------------------------------------
                                    333 ;p                         Allocated with name '_unstuff_PARM_2'
                                    334 ;n                         Allocated with name '_unstuff_PARM_3'
                                    335 ;h                         Allocated with name '_unstuff_h_1_25'
                                    336 ;ep                        Allocated with name '_unstuff_ep_1_26'
                                    337 ;tmp                       Allocated with name '_unstuff_tmp_1_26'
                                    338 ;------------------------------------------------------------
                                    339 ;	cobs.c:29: unstuff(uint8 h, uint8 *p, uint8 n)
                                    340 ;	-----------------------------------------
                                    341 ;	 function unstuff
                                    342 ;	-----------------------------------------
      00010A                        343 _unstuff:
      00010A E5 82            [12]  344 	mov	a,dpl
      00010C 90r00r0C         [24]  345 	mov	dptr,#_unstuff_h_1_25
      00010F F0               [24]  346 	movx	@dptr,a
                                    347 ;	cobs.c:31: uint8 *ep = p+n;
      000110 90r00r08         [24]  348 	mov	dptr,#_unstuff_PARM_2
      000113 E0               [24]  349 	movx	a,@dptr
      000114 FD               [12]  350 	mov	r5,a
      000115 A3               [24]  351 	inc	dptr
      000116 E0               [24]  352 	movx	a,@dptr
      000117 FE               [12]  353 	mov	r6,a
      000118 A3               [24]  354 	inc	dptr
      000119 E0               [24]  355 	movx	a,@dptr
      00011A FF               [12]  356 	mov	r7,a
      00011B 90r00r0B         [24]  357 	mov	dptr,#_unstuff_PARM_3
      00011E E0               [24]  358 	movx	a,@dptr
      00011F 90r00r0D         [24]  359 	mov	dptr,#_unstuff_ep_1_26
      000122 2D               [12]  360 	add	a,r5
      000123 F0               [24]  361 	movx	@dptr,a
      000124 E4               [12]  362 	clr	a
      000125 3E               [12]  363 	addc	a,r6
      000126 A3               [24]  364 	inc	dptr
      000127 F0               [24]  365 	movx	@dptr,a
      000128 EF               [12]  366 	mov	a,r7
      000129 A3               [24]  367 	inc	dptr
      00012A F0               [24]  368 	movx	@dptr,a
                                    369 ;	cobs.c:34: p += h-1;
      00012B 90r00r0C         [24]  370 	mov	dptr,#_unstuff_h_1_25
      00012E E0               [24]  371 	movx	a,@dptr
      00012F FC               [12]  372 	mov	r4,a
      000130 14               [12]  373 	dec	a
      000131 90r00r08         [24]  374 	mov	dptr,#_unstuff_PARM_2
      000134 2D               [12]  375 	add	a,r5
      000135 F0               [24]  376 	movx	@dptr,a
      000136 E4               [12]  377 	clr	a
      000137 3E               [12]  378 	addc	a,r6
      000138 A3               [24]  379 	inc	dptr
      000139 F0               [24]  380 	movx	@dptr,a
      00013A EF               [12]  381 	mov	a,r7
      00013B A3               [24]  382 	inc	dptr
      00013C F0               [24]  383 	movx	@dptr,a
                                    384 ;	cobs.c:36: while(p < ep){
      00013D 90r00r0D         [24]  385 	mov	dptr,#_unstuff_ep_1_26
      000140 E0               [24]  386 	movx	a,@dptr
      000141 FD               [12]  387 	mov	r5,a
      000142 A3               [24]  388 	inc	dptr
      000143 E0               [24]  389 	movx	a,@dptr
      000144 FE               [12]  390 	mov	r6,a
      000145 A3               [24]  391 	inc	dptr
      000146 E0               [24]  392 	movx	a,@dptr
      000147 FF               [12]  393 	mov	r7,a
      000148                        394 00101$:
      000148 90r00r08         [24]  395 	mov	dptr,#_unstuff_PARM_2
      00014B E0               [24]  396 	movx	a,@dptr
      00014C FA               [12]  397 	mov	r2,a
      00014D A3               [24]  398 	inc	dptr
      00014E E0               [24]  399 	movx	a,@dptr
      00014F FB               [12]  400 	mov	r3,a
      000150 A3               [24]  401 	inc	dptr
      000151 E0               [24]  402 	movx	a,@dptr
      000152 FC               [12]  403 	mov	r4,a
      000153 C0 05            [24]  404 	push	ar5
      000155 C0 06            [24]  405 	push	ar6
      000157 C0 07            [24]  406 	push	ar7
      000159 8A 82            [24]  407 	mov	dpl,r2
      00015B 8B 83            [24]  408 	mov	dph,r3
      00015D 8C F0            [24]  409 	mov	b,r4
      00015F 12r00r00         [24]  410 	lcall	___gptr_cmp
      000162 15 81            [12]  411 	dec	sp
      000164 15 81            [12]  412 	dec	sp
      000166 15 81            [12]  413 	dec	sp
      000168 50 23            [24]  414 	jnc	00104$
                                    415 ;	cobs.c:37: tmp = *p;
      00016A 8A 82            [24]  416 	mov	dpl,r2
      00016C 8B 83            [24]  417 	mov	dph,r3
      00016E 8C F0            [24]  418 	mov	b,r4
      000170 12r00r00         [24]  419 	lcall	__gptrget
      000173 F9               [12]  420 	mov	r1,a
                                    421 ;	cobs.c:38: *p = 0;
      000174 8A 82            [24]  422 	mov	dpl,r2
      000176 8B 83            [24]  423 	mov	dph,r3
      000178 8C F0            [24]  424 	mov	b,r4
      00017A E4               [12]  425 	clr	a
      00017B 12r00r00         [24]  426 	lcall	__gptrput
                                    427 ;	cobs.c:39: p += tmp;
      00017E 90r00r08         [24]  428 	mov	dptr,#_unstuff_PARM_2
      000181 E9               [12]  429 	mov	a,r1
      000182 2A               [12]  430 	add	a,r2
      000183 F0               [24]  431 	movx	@dptr,a
      000184 E4               [12]  432 	clr	a
      000185 3B               [12]  433 	addc	a,r3
      000186 A3               [24]  434 	inc	dptr
      000187 F0               [24]  435 	movx	@dptr,a
      000188 EC               [12]  436 	mov	a,r4
      000189 A3               [24]  437 	inc	dptr
      00018A F0               [24]  438 	movx	@dptr,a
      00018B 80 BB            [24]  439 	sjmp	00101$
      00018D                        440 00104$:
      00018D 22               [24]  441 	ret
                                    442 	.area CSEG    (CODE)
                                    443 	.area CONST   (CODE)
                                    444 	.area XINIT   (CODE)
                                    445 	.area CABS    (ABS,CODE)
